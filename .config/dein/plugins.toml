##LANGS
[[plugins]] # Toml
repo  = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'elzr/vim-json'
hook_add='''
let g:vim_json_syntax_conceal = 0
'''

[[plugins]] # terraform syntax highlight
repo = 'hashivim/vim-terraform'
hook_add = '''
let g:terraform_fmt_on_save = 1
'''

[[plugins]]
repo = 'fatih/vim-go'

[[plugins]]
repo = 'hynek/vim-python-pep8-indent'
on_ft = 'python'

# LINT
[[plugins]]
repo = 'dense-analysis/ale' # lint
hook_add='''
let g:ale_linters = {'python': ['flake8']}
let g:ale_fixers = {'python': ['autopep8', 'black', 'isort']}

let g:ale_fix_on_save = 0
let g:ale_open_list = 0
let g:ale_sign_column_always = 1

nmap <silent> <C-k> <Plug>(ale_previous_wrap)
nmap <silent> <C-j> <Plug>(ale_next_wrap)
'''

##Git
[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'rhysd/git-messenger.vim'

[[plugins]]
repo = 'airblade/vim-gitgutter' # visualize git diff

##BASE SEtting
[[plugins]]
repo = 'bronson/vim-trailing-whitespace' #visualize not nesessary whitespace after character

[[plugins]]
repo = 'Yggdroot/indentLine' #visualize indent
hook_add='''
let g:indentLine_enabled = 0
let g:indentLine_char = '|'
let g:indentLine_leadingSpaceEnabled = 2
let g:indentLine_leadingSpaceChar = '·'
'''

[[plugins]]
repo = 'cohama/lexima.vim' #support edit bucket

[[plugins]]
repo = 'osyo-manga/vim-over' # support replace

[[plugins]]
repo = 'simeji/winresizer' # support window resize

[[plugins]]
repo = 'rking/ag.vim' # to use Ag command in vim

[[plugins]]
repo = 'ncm2/float-preview.nvim'
hook_source = '''
set completeopt-=preview
let g:float_preview#docked = 0
'''

[[plugins]]
repo = 'junegunn/fzf.vim'

[[plugins]]
repo = 'scrooloose/nerdtree' # display directory and file construct
hook_add='''
let g:NERDTreeShowBookmarks=1
let g:indentLine_fileTypeExclude = ["nerdtree"]
let g:NERDTreeShowHidden=1
'''

[[plugins]]
repo = 'jistr/vim-nerdtree-tabs' # nerd-tree-sync-tab

[[plugins]]
repo = 'nvim-lua/plenary.nvim'

[[plugins]]
repo = 'nvim-telescope/telescope.nvim' # search file , buffer
depends = ['airblade/vim-rooter']
hook_add='''
nnoremap <leader>ff <cmd>Telescope find_files<cr>
nnoremap <leader>fg <cmd>Telescope live_grep<cr>
nnoremap <leader>fb <cmd>Telescope buffers<cr>
nnoremap <leader>fh <cmd>Telescope help_tags<cr>

lua << EOF
require('telescope').setup({
  pickers = {
    find_files = {
      theme = "dropdown",
    },
    live_grep = {
      theme = "dropdown",
    },
    buffers = {
      theme = "dropdown",
    },
    help_tags = {
      theme = "dropdown",
    },
  }
})
EOF
'''

# telescope-frequencyが依存
[[plugins]]
repo = 'tami5/sqlite.lua'

# telescope-frequencyが依存
[[plugins]]
repo = 'kyazdani42/nvim-web-devicons'

[[plugins]]
repo = 'nvim-telescope/telescope-frecency.nvim'
hook_add = '''
nnoremap <leader>fq <cmd>Telescope frecency<cr>
lua << EOF
require"telescope".load_extension("frecency")
EOF
'''

[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
hook_add = '''
lua << EOF
require('nvim-treesitter.configs').setup {
  ensure_installed = { 'lua','cue','yaml','toml','python','go','make','html','sql','jsonnet' },
  highlight = {
    enable = true,
  },
}
EOF
'''

[[plugins]]
repo = 'cocopon/iceberg.vim' #colorscheme

[[plugins]]
repo = 'vim-airline/vim-airline' #Custom Airline
hook_add='''
let g:airline#extensions#tabline#formatter='unique_tail'
let g:airline_powerline_fonts=0
let g:airline#extensions#tabline#enabled = 1
nmap <C-p> <Plug>AirlineSelectPrevTab
nmap <C-n> <Plug>AirlineSelectNextTab
let g:airline#extensions#tabline#buffer_idx_mode = 1
if !exists('g:airline_symbols')
  let g:airline_symbols = {}
endif
'''

[[plugins]]
repo = 'vim-airline/vim-airline-themes' #to set ailrline theme
hook_add='''
"let g:airline_theme='minimalist'
'''

[[plugins]]
 repo = 'williamboman/mason.nvim'

[[plugins]]
 repo = 'williamboman/mason-lspconfig.nvim'
