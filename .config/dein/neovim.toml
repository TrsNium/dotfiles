[[plugins]]
repo = 'neovim/nvim-lspconfig'
hook_add = '''
lua require'lspconfig'.pylsp.setup{}
lua require'lspconfig'.gopls.setup{}
lua require'lspconfig'.dockerls.setup{}
lua require'lspconfig'.elixirls.setup{}
lua require'lspconfig'.vimls.setup{}
lua require'lspconfig'.yamlls.setup{}
'''

[[plugins]]
repo = 'ncm2/float-preview.nvim'
hook_source = '''
set completeopt-=preview
let g:float_preview#docked = 0
'''

[[plugins]]
repo = 'Shougo/neosnippet'
hook_source = '''
  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_target)
  if has('conceal')
      set conceallevel=2 concealcursor=niv
  endif
'''
on_i  = 1
depends = ['neosnippet-snippets']

[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = ['neosnippet-snippets']
on_i = 1
hook_source = '''
imap <expr><TAB>
  \ pumvisible() ? "\<C-n>" :
  \ neosnippet#expandable_or_jumpable() ?
  \    "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"
'''

[[plugins]] # unite.vim 後継
repo = 'Shougo/denite.nvim'
if = 'has("python3")'
on_cmd = 'Denite'
hook_post_source = '''
" file_rec
  if executable('pt')
      call denite#custom#var('file_rec', 'command', ['pt', '--follow', '--nocolor', '--nogroup', '--hidden', '-g', ''])
  endif

  " grep
  if executable('pt')
      call denite#custom#var('grep', 'command', ['pt', '--nogroup', '--nocolor', '--smart-case', '--hidden'])
      call denite#custom#var('grep', 'default_opts', [])
      call denite#custom#var('grep', 'recursive_opts', [])
  endif

  call denite#custom#source('file_mru', 'matchers', ['matcher_fuzzy', 'matcher_project_files'])
  call denite#custom#source('file_mru', 'converters', ['converter_relative_word'])
'''

[[plugins]]
repo = 'Shougo/neomru.vim'
depends = 'denite.nvim'
on_path = '.*'

[[plugins]]
repo = 'Shougo/neoyank.vim'
depends = 'denite.nvim'
on_event = 'TextYankPost'
